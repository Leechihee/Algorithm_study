#include <vector>

// 2024 PCCP 기출문제 3번 아날로그 시계(Lv.2) 문제이며 (https://school.programmers.co.kr/learn/courses/30/lessons/250135)
// 아날로그 시계는 초침이 분침과 시침에 만날때마다 종이 울리는데
// 문제에 주어지는 두개의 시간 사이에 종이 울리는 횟수를 출력하는 문제.
// 문제는 수학을 이용한 문제풀이 방식이며 공식을 세우고 그것을 구현하는 것이 키포인트이다.
// 필자는 처음 문제를 보았을때 두가지 방법을 생각하였다. 첫번째는 시침과 분침, 초침의 초마다의 각변화량을 구한다음
// 반복문을 이용한 풀이방법과 두번째는 시침과 분침, 초침은 분마다 2번씩 무조권 만나는 것을 이용한 풀이방법이다.
// 지금은 두번째 풀이방법을 이용하여 풀이하였다.

using namespace std;

int getcnt(int h, int m, int s)
{
	int count = -1; 
	double h_angle = h*30+m*0.5+s*0.5/60; // 1시간마다 30도, 1분마다 0.5도, 1초마다 1/120도
	double m_angle = m*6+s*0.1; // 1분마다 6도, 1초마다 0.1도
	double s_angle = s*6; // 1초마다 6도
	
	while(h_angle >= 360) h_angle -= 360; // c++에선 double%int 연산이 불가하므로 반복문을 이용하여 각을 360 이하로 설정
	while(m_angle >= 360) m_angle -= 360; // 윗 코드와 이하동문

	if(s_angle >= h_angle) count++; // 마지막 시점에서 초침의 각도가 시침의 각도보다 크면 한번 초침이 시침을 지나쳤기때문에 횟수 한번
	if(s_angle >= m_angle) count++; // 마지막 시점에서 초침의 각도가 분침의 각도보다 크면 한번 초침이 분침을 지나쳤기때문에 횟수 한번
	
	count += 2*(h*60+m); // 매 분마다 2번씩 만나기때문에 분단위로 변환 후 연산
	count -= h; // 59분 -> 0분(60분)일때 초침과 분침이 만나지 않기때문에 시간만큼 뺄셈
	if(h >= 12) count -= 2; // 11시59분59초 -> 12시인 경우 분침, 초침이 만나지 않기떄문에 2번이 아닌 1번 만나는걸로 간주
	
	return count;
}

int solution(int h1, int m1, int s1, int h2, int m2, int s2) {
    int answer = getcnt(h2,m2,s2) - getcnt(h1,m1,s1);
	// 후의 시간에서 만난 횟수를 전의 시간에서 만난 횟수로 빼면 그 사이에서의 횟수가 나오는 것을 이용
	if((h1==0||h1==12) && m1==0&&s1==0) answer++; // 시작시간이 00시00분00초 거나 12시00분00초 라면 시작과 동시에 한번 만나기때문에 한번 추가
    return answer;
}