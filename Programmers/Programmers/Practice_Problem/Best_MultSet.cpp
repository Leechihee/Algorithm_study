// 프로그래머스 연습문제 중 최고의 집합이며 (Lv.3) (https://school.programmers.co.kr/learn/courses/30/lessons/12938)
// 자연수 n개로 주어진 중복 집합 중에 다음과 같은 조건을 만족하는 집합을 최고의 집합이라 한다.
// 1. 각 원소의 합이 S가 되는 수의 집합
// 2. 위 조건을 만족하면서 각 원소의 곱이 최대가 되는 집합
// 집합의 원소의 개수 N와 모든 원소의 합 S가 주어질 때, 최고의 집합을 리턴하는 문제이다.

// 문제 해석
// 지문에서 알려준 것과 같이 각 원소의 합이 S가 되는 집합 중에서
// 모든 원소의 곱이 최대인 집합을 리턴하는 문제이다.

// 풀이
// 문제에서 주어진 것 중 하나인 중복 집합인 것과
// 간단한 수학을 이용하여 문제를 풀이해나가면 된다.
// 곱이 최대가 되는 경우는 모든 원소의 크기 차이가 최소일 때, 곱이 최대가 되므로
// S/N 값을 배열에 넣고 넣은 값만큼 S를 빼고 N을 1 빼는 방법으로 N이 0이 될 때까지 반복하면 되는 문제이다.
// 이때, 집합에 넣을 때마다 N을 빼는 것은 N이 원소의 개수이므로 넣을 때마다 1씩 빼야 하며
// 원소의 개수가 모든 원소의 합보다 크다면 자연수로 집합을 만들 수 없으므로 -1을 리턴해야한다.

#include <string>
#include <vector>

using namespace std;

vector<int> solution(int n, int s) {
    vector<int> answer;
	if(n > s) // S보다 N이 크다면 집합을 만들 수 없으므로
		return {-1}; // -1을 넣고 리턴
	int N = n, S = s;
	while(N > 0) // N이 0이 될 때까지
	{
		answer.push_back(S/N); // 나눈 값을 넣고
		S -= S/N; // 넣은 값 만큼 S를 빼고
		N--; // N을 뺀다.
	}
	
    return answer;
}